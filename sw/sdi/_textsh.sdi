/*************************************************************************
 *
 *  $RCSfile: _textsh.sdi,v $
 *
 *  $Revision: 1.9 $
 *
 *  last change: $Author: jp $ $Date: 2001-10-08 13:06:32 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

interface BaseText : Selection
[
    Automation = FALSE;
]
{
    SID_INSERTDOC // status(final|play|rec)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_BOOKMARK // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUM_BULLET_MOVEDOWN // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUM_BULLET_MOVEUP // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_EDIT_FORMULA // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_SYMBOL // status(final|play|rec)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_PAGEHEADER	// status(final|play|rec)
    [
        StateMethod = GetState ;
        Export = FALSE;
    ]
    FN_INSERT_PAGEFOOTER	// status(final|play|rec)
    [
        StateMethod = GetState ;
        Export = FALSE;
    ]

     //--------------------------------------------------------------------------
    FN_INSERT_SOFT_HYPHEN // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_HARDHYPHEN // status()
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_HARD_SPACE // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_BREAK // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_PAGEBREAK // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem InsertLinebreak FN_INSERT_LINEBREAK ( )  // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_COLUMN_BREAK // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_BREAK_DLG // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_INSERT_GRAPHIC // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_HRULER // status()
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
    ]
    SID_INSERT_DIAGRAM // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_INSERT_SOUND
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_INSERT_VIDEO
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_SMA // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_INSERT_FLOATINGFRAME // status()
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem InsertObject SID_INSERT_OBJECT ( )  // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem InsertPlugin SID_INSERT_PLUGIN ( )  // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem InsertApplet SID_INSERT_APPLET ( )  // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_TABLE // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_HYPERLINK_SETLINK // status()
    [
        ExecMethod = ExecInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_HYPERLINK_GETLINK // status()
    [
        StateMethod = StateInsert ;
    ]
    FN_INSERT_HYPERLINK // status()
    [
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_HYPERLINK_DIALOG
    [
        ExecMethod = Execute ;
        StateMethod = GetState;
    ]
    SID_RUBY_DIALOG
    [
        ExecMethod = Execute ;
        StateMethod = GetState;
    ]
    FN_EDIT_HYPERLINK
    [
        ExecMethod = Execute ;
        StateMethod = GetState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_TABLE_UNSET_READ_ONLY // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_SENT // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_BACK_SENT // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_WORD // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_BACK_WORD // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem DelToEndOfLine FN_DELETE_LINE ( )  // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_BACK_LINE // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_PARA // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_BACK_PARA // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DELETE_WHOLE_LINE // status(final|play)
    [
        ExecMethod = ExecDelete ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_CHAR_LEFT // status(final|play)
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
    ]
    FN_CHAR_RIGHT // status(final|play)
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
    ]
    FN_LINE_UP // status(final|play)
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
    ]
    FN_LINE_DOWN // status(final|play)
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
    ]
    FN_SELECT_WORD // status(final|play)
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
    ]
    SID_SELECTALL // status(final|play)
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
    ]
     //
     //	Goto - Methoden
     //
    FN_CNTNT_TO_NEXT_FRAME // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_START_OF_COLUMN // status(final|play)
    [
        ExecMethod = ExecMoveCol ;
        StateMethod = NoState ;
    ]
    FN_END_OF_COLUMN // status(final|play)
    [
        ExecMethod = ExecMoveCol ;
        StateMethod = NoState ;
    ]
    FN_START_OF_NEXT_COLUMN // status(final|play)
    [
        ExecMethod = ExecMoveCol ;
        StateMethod = NoState ;
    ]
    FN_END_OF_NEXT_COLUMN // status(final|play)
    [
        ExecMethod = ExecMoveCol ;
        StateMethod = NoState ;
    ]
    FN_START_OF_PREV_COLUMN // status(final|play)
    [
        ExecMethod = ExecMoveCol ;
        StateMethod = NoState ;
    ]
    FN_END_OF_PREV_COLUMN // status(final|play)
    [
        ExecMethod = ExecMoveCol ;
        StateMethod = NoState ;
    ]
    FN_TO_HEADER // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_TO_FOOTER // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_PREV_TABLE // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_NEXT_TABLE // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_GOTO_PREV_REGION
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_GOTO_NEXT_REGION
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_NEXT_WORD // status(final|play)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_START_OF_PARA // status(final|play)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_END_OF_PARA // status(final|play)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_PREV_PARA // status(final)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_NEXT_PARA // status(final)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_PREV_WORD // status(final|play)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_NEXT_SENT // status(final|play)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_PREV_SENT // status(final|play)
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
    ]
    FN_START_OF_NEXT_PAGE // status(final|play)
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
    ]
    FN_END_OF_NEXT_PAGE // status(final|play)
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
    ]
    FN_START_OF_PREV_PAGE // status(final|play)
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
    ]
    FN_END_OF_PREV_PAGE // status(final|play)
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
    ]
    FN_START_OF_PAGE // status(final|play)
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
    ]
    FN_END_OF_PAGE // status(final|play)
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
    ]
    FN_START_OF_LINE // status(final|play)
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
    ]
    FN_END_OF_LINE // status(final|play)
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
    ]
    FN_START_OF_DOCUMENT // status(final|play)
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
    ]
    FN_END_OF_DOCUMENT // status(final|play)
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
    ]
    FN_NEXT_TOXMARK  // status(final|play)
    [
        ExecMethod = ExecMoveMisc;
        StateMethod = NoState ;
    ]

    FN_PREV_TOXMARK  // status(final|play)
    [
        ExecMethod = ExecMoveMisc;
        StateMethod = NoState ;
    ]

    FN_NEXT_TBLFML  // status(final|play)
    [
        ExecMethod = ExecMoveMisc;
        StateMethod = NoState ;
    ]

    FN_PREV_TBLFML  // status(final|play)
    [
        ExecMethod = ExecMoveMisc;
        StateMethod = NoState ;
    ]

    FN_NEXT_TBLFML_ERR  // status(final|play)
    [
        ExecMethod = ExecMoveMisc;
        StateMethod = NoState ;
    ]

    FN_PREV_TBLFML_ERR  // status(final|play)
    [
        ExecMethod = ExecMoveMisc;
        StateMethod = NoState ;
    ]

     //
     //	Get - Properties
     //
    FN_AUTOFORMAT_AUTO // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_AUTOFORMAT_APPLY // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_AUTOFORMAT_REDLINE_APPLY // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_AUTO_CORRECT // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem SortDialog FN_SORTING_DLG ( )  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SfxVoidItem ChapterNumberingDialog FN_NUMBERING_OUTLINE_DLG ( )  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]
    FN_CALCULATE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_FORMAT_RESET // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_GOTO_REFERENCE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
    ]
     //Parameter kann noch nicht aufgezeichnet werden
    FN_NUM_NUMBERING_ON // status(final|play)
    [
        ExecMethod = ExecEnterNum ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_BULLETS // status(final|play)
    [
        ExecMethod = ExecEnterNum ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUM_BULLET_ON // status(final|play)
    [
        ExecMethod = ExecEnterNum ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INSERT_FRAME // status(final|play)
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FORMAT_COLUMN // status()
    [
        ExecMethod = ExecInsert ;
        StateMethod = StateInsert ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_INSERT_FOOTNOTE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    /*-----------------24.01.97 07.33-------------------
    Fussnoten - Befehle
--------------------------------------------------*/

    FN_INSERT_ENDNOTE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_FORMAT_FOOTNOTE_DLG // status()
    [
        ExecMethod = Execute ;
    ]
    FN_FOOTNOTE_TO_ANCHOR // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_NEXT_FOOTNOTE // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]
    FN_PREV_FOOTNOTE // status(final|play)
    [
        ExecMethod = ExecMoveMisc ;
        StateMethod = NoState ;
    ]

    FN_INSERT_FOOTNOTE_DLG // status(final|play|rec)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    /*-----------------24.01.97 07.34-------------------
    Ende Fussnoten
    --------------------------------------------------*/
    FN_INSERT_FIELD // status(final|play)
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        AutoUpdate ;
    ]
    FN_INSERT_REF_FIELD
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        AutoUpdate ;
    ]
    FN_INSERT_FIELD_CTRL
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
     //--------------------------------------------------------------------------
    FN_INSERT_FLD_PGNUMBER
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        ReadOnlyDoc = FALSE ;
    ]
    FN_INSERT_FLD_PGCOUNT
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        ReadOnlyDoc = FALSE ;
    ]

    FN_INSERT_FLD_TITLE
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        ReadOnlyDoc = FALSE ;
    ]
    FN_INSERT_FLD_DATE
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
     //--------------------------------------------------------------------------
    FN_INSERT_FLD_TIME
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
     //--------------------------------------------------------------------------
    FN_INSERT_FLD_AUTHOR
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_GOTO_NEXT_INPUTFLD // status(final|play)
    [
        ExecMethod = ExecField ;
        StateMethod = NoState ;
    ]
    FN_GOTO_PREV_INPUTFLD // status(final|play)
    [
        ExecMethod = ExecField ;
        StateMethod = NoState ;
    ]
    FN_EXECUTE_MACROFIELD // status()
    [
        Export = FALSE ;
        ExecMethod = ExecField ;
        StateMethod = StateField ;
    ]
    FN_EDIT_FIELD // status(final|play)
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
    ]
    FN_GLOSSARY_DLG // status()
    [
        ExecMethod = ExecGlossary ;
        StateMethod = GetState ;
    ]
    FN_EXPAND_GLOSSARY // status(final|play)
    [
        ExecMethod = ExecGlossary ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_POSTIT // status(final|play)
    [
        ExecMethod = ExecField ;
        StateMethod = StateField;
    ]
    FN_REDLINE_COMMENT // status(play)
    [
        ExecMethod = ExecField ;
        StateMethod = StateField ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR|SW_DISABLE_ON_MAILBOX_EDITOR";
    ]
    FN_JAVAEDIT // status(final|play)
    [
        ExecMethod = ExecField ;
        StateMethod = StateField;
    ]
     // Slots mit Export = FALSE
     //Slots ohne Export
    FN_CHAR_LEFT_SEL
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_CHAR_RIGHT_SEL
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_LINE_UP_SEL
    [
        ExecMethod = ExecBasicMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_LINE_DOWN_SEL
    [
        ExecMethod = ExecBasicMove;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_START_OF_NEXT_PAGE_SEL
    [
        ExecMethod = ExecMovePage;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_END_OF_NEXT_PAGE_SEL
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_START_OF_PREV_PAGE_SEL
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_END_OF_PREV_PAGE_SEL
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_START_OF_PAGE_SEL
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_END_OF_PAGE_SEL
    [
        ExecMethod = ExecMovePage ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_NEXT_WORD_SEL
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_START_OF_PARA_SEL
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_END_OF_PARA_SEL
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_PREV_WORD_SEL
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_NEXT_SENT_SEL
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_START_OF_LINE_SEL
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_END_OF_LINE_SEL
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_START_OF_DOCUMENT_SEL
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_END_OF_DOCUMENT_SEL
    [
        ExecMethod = ExecMove ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_PREV_SENT_SEL
    [
        ExecMethod = ExecMoveLingu ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_QRY_INSERT
    [
        ExecMethod = ExecDB ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_QRY_MERGE_FIELD
    [
        ExecMethod = ExecDB ;
        StateMethod = NoState ;
        Export = FALSE ;
    ]
    FN_QRY_INSERT_FIELD
    [
        ExecMethod = ExecDB ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_ADJUST_LEFT
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_ADJUST_RIGHT
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_ADJUST_CENTER
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_ADJUST_BLOCK
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_LINESPACE_10
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_LINESPACE_15
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_LINESPACE_20
    [
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        Export = FALSE ;
    ]
    SID_ATTR_PARA_ADJUST // status(final|play)
    [
         //			 (0=links, 1=rechts, 2=block, 3=zentriert, )"
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_LINESPACE // status(final|play)
    [
         //	SvxLineSpace		LineSpace		MID_LINESPACE;
         //	UINT16				LineHeight		MID_HEIGHT; 	// % or direct
         //	SvxInterLineSpace	InterLineSpace	MID_INTER_LINESPACE;
         //	INT16				InterSpace		MID_INTER_SPACE;
        ExecMethod = ExecParaAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_SPLIT // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_KEEP // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_WIDOWS // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_ORPHANS // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_PAGEBREAK // status(final|play)
    [
        ExecMethod = ExecParaAttrArgs ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_MODEL // status(final|play)
    [
        ExecMethod = ExecParaAttrArgs ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_PARA_DLG // status(final|play)
    [
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_SELECT_PARA // status(final|play)
    [
        ExecMethod = Execute ;
    ]
    SID_DEC_INDENT
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_INC_INDENT
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_DEC_INDENT_OFFSET
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_INC_INDENT_OFFSET
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FORMAT_DROPCAPS // status(final|play)
    [
        ExecMethod = ExecParaAttrArgs ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_PARA_HYPHENZONE // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_FONT // status(final|play)
    [
        ExecMethod = ExecTxtCtrl ;
        StateMethod = GetTxtFontCtrlState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_FONTHEIGHT // status(final|play)
    [
        ExecMethod = ExecTxtCtrl ;
        StateMethod = GetTxtFontCtrlState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_COLOR_BACKGROUND // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_COLOR_BACKGROUND_EXT // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_COLOR_EXT // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_COLOR2
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_COLOR // status(final|play)
    [
        ExecMethod = ExecTxtCtrl ;
        StateMethod = GetTxtCtrlState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_WEIGHT // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtFontCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_POSTURE // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtFontCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_UNDERLINE // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_FLASH // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_STRIKEOUT // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_UNDERLINE_DOUBLE // status(final|play)
    [
        ExecMethod = ExecCharAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_CONTOUR // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_SHADOWED // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_AUTOKERN // // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_ESCAPEMENT // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_SET_SUPER_SCRIPT
    [
        ExecMethod = ExecCharAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_SET_SUB_SCRIPT
    [
        ExecMethod = ExecCharAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_CASEMAP // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_LANGUAGE // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;;
        StateMethod = GetTxtFontCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_KERNING // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_CHAR_DLG // status(final|play)
    [
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_CHAR_WORDLINEMODE // status(final|play)
    [
        ExecMethod = ExecTxtCtrl;
        StateMethod = GetTxtCtrlState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_GROW_FONT_SIZE // status(final|play)
    [
        ExecMethod = ExecCharAttrArgs ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_SHRINK_FONT_SIZE // status(final|play)
    [
        ExecMethod = ExecCharAttrArgs ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_TRANSLITERATE_UPPER
    [
        ExecMethod = ExecTransliteration;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_TRANSLITERATE_LOWER
    [
        ExecMethod = ExecTransliteration;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_TRANSLITERATE_HALFWIDTH
    [
        ExecMethod = ExecTransliteration;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_TRANSLITERATE_FULLWIDTH
    [
        ExecMethod = ExecTransliteration;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_TRANSLITERATE_HIRAGANA
    [
        ExecMethod = ExecTransliteration;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_TRANSLITERATE_KATAGANA
    [
        ExecMethod = ExecTransliteration;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]


}  //ende interface text



