/*************************************************************************
 *
 *  $RCSfile: _tabsh.sdi,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: jp $ $Date: 2001-10-18 15:12:43 $
 *
 *  The Contents of this file are made available subject to the terms of
 *  either of the following licenses
 *
 *         - GNU Lesser General Public License Version 2.1
 *         - Sun Industry Standards Source License Version 1.1
 *
 *  Sun Microsystems Inc., October, 2000
 *
 *  GNU Lesser General Public License Version 2.1
 *  =============================================
 *  Copyright 2000 by Sun Microsystems, Inc.
 *  901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License version 2.1, as published by the Free Software Foundation.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *  MA  02111-1307  USA
 *
 *
 *  Sun Industry Standards Source License Version 1.1
 *  =================================================
 *  The contents of this file are subject to the Sun Industry Standards
 *  Source License Version 1.1 (the "License"); You may not use this file
 *  except in compliance with the License. You may obtain a copy of the
 *  License at http://www.openoffice.org/license.html.
 *
 *  Software provided under this License is provided on an "AS IS" basis,
 *  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
 *  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
 *  See the License for the specific provisions governing your rights and
 *  obligations concerning the Software.
 *
 *  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
 *
 *  Copyright: 2000 by Sun Microsystems, Inc.
 *
 *  All Rights Reserved.
 *
 *  Contributor(s): _______________________________________
 *
 *
 ************************************************************************/

interface BaseTextTable : Selection
[
    Automation = FALSE;
]
{

    FN_FORMAT_TABLE_DLG   // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_NUM_FORMAT_TABLE_DLG   // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_CALC_TABLE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_TABLE_AUTOSUM // status()
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]


    FN_TABLE_VERT_NONE
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_VERT_CENTER
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_VERT_BOTTOM
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_TABLE_SET_COL_WIDTH // status( final|play )
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_ULSPACE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_LRSPACE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        GroupId = GID_TABLE;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_DELETE_COL  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_DELETE_ROW  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_END_TABLE  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_START_TABLE	// status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_TABLE_INSERT_COL // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_INSERT_COL_DLG  // status(final|play)
    [
        Export = FALSE ;
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_INSERT_ROW // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_INSERT_ROW_DLG  // status(final|play)
    [
        Export = FALSE ;
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_MERGE_CELLS  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_OPTIMIZE_TABLE
    [
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        StateMethod = GetState ;
    ]

    FN_TABLE_ADJUST_CELLS  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_BALANCE_CELLS	// status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_BALANCE_ROWS  // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_SELECT_ALL // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_TABLE_SELECT_COL   // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_TABLE_SELECT_ROW  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]


    FN_TABLE_SET_ROW_HEIGHT // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_OPTIMAL_HEIGHT // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_SPLIT_CELLS // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_SPLIT_TABLE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_MERGE_TABLE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_UNSET_READ_ONLY_CELLS // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
    ]

    SID_AUTOFORMAT // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SvxBoxItem BorderStyle SID_ATTR_BORDER // status()
    [
        ExecMethod = Execute ;
        StateMethod = GetFrmBorderState ;
        GroupId = GID_TABLE;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_FRAME_LINESTYLE // status()
    [
        ExecMethod = ExecTableStyle ;
        StateMethod = GetLineStyleState ;
        Export = FALSE; //#44439#
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_FRAME_LINECOLOR // status(play)
    [
        ExecMethod = ExecTableStyle ;
        StateMethod = GetLineStyleState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_TABLE_MODE_FIX
    [
        ExecMethod = Execute;
        StateMethod = GetState;
    ]

    FN_TABLE_MODE_FIX_PROP
    [
        ExecMethod = Execute;
        StateMethod = GetState;
    ]

    FN_TABLE_MODE_VARIABLE
    [
        ExecMethod = Execute;
        StateMethod = GetState;
    ]

    FN_NUMBER_FORMAT
    [
        ExecMethod = ExecNumberFormat;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_NUMBER_STANDARD
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_TWODEC
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_SCIENTIFIC
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_DATE
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_TIME
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_CURRENCY
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    FN_NUMBER_PERCENT
    [
        ExecMethod = ExecNumberFormat;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
// Slots ohne Export

    FN_INSERT_TABLE
    [
        Export = FALSE ;
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]


}

