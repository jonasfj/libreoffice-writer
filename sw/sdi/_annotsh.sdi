/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: _annotsh.sdi,v $
 *
 *  $Revision: 1.2 $
 *
 *  last change: $Author: rt $ $Date: 2008-02-19 13:36:06 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

interface _Annotation
[ Automation = FALSE; ]
{
    FN_DELETE_NOTE
    [
        ExecMethod = NoteExec ;
        StateMethod = GetNoteState ;
    ]

    FN_DELETE_NOTE_AUTHOR
    [
        ExecMethod = NoteExec ;
        StateMethod = GetNoteState ;
    ]

    FN_DELETE_ALL_NOTES
    [
        ExecMethod = NoteExec ;
        StateMethod = GetNoteState ;
    ]

    FN_HIDE_NOTE
    [
        ExecMethod = NoteExec ;
        StateMethod = GetNoteState ;
    ]

    FN_HIDE_NOTE_AUTHOR
    [
        ExecMethod = NoteExec ;
        StateMethod = GetNoteState ;
    ]

    FN_HIDE_ALL_NOTES
    [
        ExecMethod = NoteExec ;
        StateMethod = GetNoteState ;
    ]

    FN_ESCAPE // api:
    [
        ExecMethod = NoteExec ;
    ]
    
    SfxVoidItem Cut SID_CUT ( )  // api:
    [
        ExecMethod = ExecClpbrd ;
        StateMethod = StateClpbrd ;
        Volatile ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_COPY // api:
    [
        ExecMethod = ExecClpbrd ;
        StateMethod = StateClpbrd ;
        Volatile ;
    ]

    SID_PASTE   // api:
    [
        ExecMethod = ExecClpbrd ;
        StateMethod = StateClpbrd ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_PASTESPECIAL  // api:
    [
        StateMethod = StateClpbrd ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_SELECTALL  // api:
    [
        ExecMethod = Exec ;
        StateMethod = NoState ;
    ]
    
    SID_UNDO // api:
    [
        ExecMethod = ExecUndo ;
        StateMethod = StateUndo ;

        ToolBoxConfig , MenuConfig , AccelConfig;
    ]

    SID_REDO // api:
    [
        ExecMethod = ExecUndo ;
        StateMethod = StateUndo ;
        
    ]

    SID_REPEAT // api:
    [
        ExecMethod = ExecUndo ;
        StateMethod = StateUndo ;
    ]
    SID_GETUNDOSTRINGS
    [
        StateMethod = StateUndo ;
    ]

    SID_GETREDOSTRINGS
    [
        StateMethod = StateUndo ;
    ]

    FN_FORMAT_RESET  // api:
    [
        ExecMethod = Exec ;
        StateMethod = NoState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_INSERT_SYMBOL // api:
    [
        ExecMethod = Exec ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_FONT // status()
    [
        ExecMethod = Exec;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_FONTHEIGHT // status()
    [
        ExecMethod = Exec;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
 
    SID_ATTR_CHAR_COLOR // api:
    [
        ExecMethod = Exec;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    
    SID_ATTR_CHAR_WEIGHT // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_POSTURE // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_UNDERLINE // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_CONTOUR
    [
        ExecMethod = Exec;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_SHADOWED
    [
        ExecMethod = Exec;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_CHAR_STRIKEOUT
    [
        ExecMethod = Exec;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_ADJUST_LEFT // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_ADJUST_CENTER // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_ADJUST_RIGHT // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_ADJUST_BLOCK // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_LINESPACE_10 // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_LINESPACE_15 // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_PARA_LINESPACE_20 // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_CHAR_DLG  // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_PARA_DLG // api:
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_SET_SUPER_SCRIPT
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_SET_SUB_SCRIPT
    [
        ExecMethod = Exec ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
}  

