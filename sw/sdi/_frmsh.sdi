/*************************************************************************
 *
 *  OpenOffice.org - a multi-platform office productivity suite
 *
 *  $RCSfile: _frmsh.sdi,v $
 *
 *  $Revision: 1.5 $
 *
 *  last change: $Author: rt $ $Date: 2006-05-02 15:14:31 $
 *
 *  The Contents of this file are made available subject to
 *  the terms of GNU Lesser General Public License Version 2.1.
 *
 *
 *    GNU Lesser General Public License Version 2.1
 *    =============================================
 *    Copyright 2005 by Sun Microsystems, Inc.
 *    901 San Antonio Road, Palo Alto, CA 94303, USA
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License version 2.1, as published by the Free Software Foundation.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA  02111-1307  USA
 *
 ************************************************************************/

interface BaseTextFrame
[
    Automation = FALSE;
]
{
    FN_FRAME_TO_ANCHOR  // status()
    [
        /*OS: Datentypen unvertraeglich ?? */
        ExecMethod = Execute ;
        StateMethod = NoState ;
    ]

    FN_FRAME_ALIGN_VERT_CENTER // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_BOTTOM  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_TOP   // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_ROW_CENTER  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_ROW_BOTTOM // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_ROW_TOP  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_CHAR_CENTER // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_CHAR_BOTTOM  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_VERT_CHAR_TOP  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_HORZ_CENTER  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_HORZ_RIGHT // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_ALIGN_HORZ_LEFT // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]


    SID_FRAME_TO_TOP // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_FRAME_TO_BOTTOM  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]


    FN_FRAME_UP  // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FRAME_DOWN // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_ULSPACE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_LRSPACE // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        GroupId = GID_FRAME;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FORMAT_FRAME_DLG   // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_FRAME_LINESTYLE // status()
    [
        ExecMethod = ExecFrameStyle ;
        StateMethod = GetLineStyleState ;
        Export = FALSE; //#44439#
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_FRAME_LINECOLOR // status(final|play)
    [
        ExecMethod = ExecFrameStyle ;
        StateMethod = GetLineStyleState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_OBJECT_ALIGN_CENTER  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_OBJECT_ALIGN_RIGHT // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_OBJECT_ALIGN_LEFT // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_OBJECT_ALIGN_UP // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_OBJECT_ALIGN_MIDDLE  // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_OBJECT_ALIGN_DOWN   // status(play|final)
    [
        ExecMethod = Execute ;
        StateMethod = GetState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    
    /*****************************************************

 Abfragefunktionen fuer ImageMaps

 ****************************************************/

//
// Slots ohne Export

    FN_INSERT_FRAME
    [
        ExecMethod = Execute ;
        StateMethod = StateInsert ;
        Export = False;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_BORDER // status()
    [
        ExecMethod = ExecFrameStyle ;
        StateMethod = GetLineStyleState ;
        GroupId = GID_FRAME;
        Export = False;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_HYPERLINK_SETLINK  // status()
    [
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_HYPERLINK_GETLINK  // status()
    [
        StateMethod = GetState ;
    ]

    FN_FRAME_MIRROR_ON_EVEN_PAGES // status(final|play|rec)
    [
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
}


